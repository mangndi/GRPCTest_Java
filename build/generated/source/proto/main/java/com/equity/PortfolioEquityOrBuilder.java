// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: clientservice.proto

package com.equity;

public interface PortfolioEquityOrBuilder extends
    // @@protoc_insertion_point(interface_extends:equity.PortfolioEquity)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * nomor urut
   * </pre>
   *
   * <code>int32 id = 1;</code>
   * @return The id.
   */
  int getId();

  /**
   * <pre>
   * Kode Saham
   * </pre>
   *
   * <code>string Symbol = 2;</code>
   * @return The symbol.
   */
  java.lang.String getSymbol();
  /**
   * <pre>
   * Kode Saham
   * </pre>
   *
   * <code>string Symbol = 2;</code>
   * @return The bytes for symbol.
   */
  com.google.protobuf.ByteString
      getSymbolBytes();

  /**
   * <pre>
   * IDX :
   * </pre>
   *
   * <code>string Exchange = 3;</code>
   * @return The exchange.
   */
  java.lang.String getExchange();
  /**
   * <pre>
   * IDX :
   * </pre>
   *
   * <code>string Exchange = 3;</code>
   * @return The bytes for exchange.
   */
  com.google.protobuf.ByteString
      getExchangeBytes();

  /**
   * <pre>
   *15 Char
   * </pre>
   *
   * <code>string ClientID = 4;</code>
   * @return The clientID.
   */
  java.lang.String getClientID();
  /**
   * <pre>
   *15 Char
   * </pre>
   *
   * <code>string ClientID = 4;</code>
   * @return The bytes for clientID.
   */
  com.google.protobuf.ByteString
      getClientIDBytes();

  /**
   * <pre>
   * in Lot
   * </pre>
   *
   * <code>int64 Quantity = 5;</code>
   * @return The quantity.
   */
  long getQuantity();

  /**
   * <pre>
   * in Lot
   * </pre>
   *
   * <code>int64 LotSize = 6;</code>
   * @return The lotSize.
   */
  long getLotSize();

  /**
   * <code>int32 Price = 7;</code>
   * @return The price.
   */
  int getPrice();

  /**
   * <pre>
   * nilai harus dibagi 100
   * </pre>
   *
   * <code>int32 Haircut = 8;</code>
   * @return The haircut.
   */
  int getHaircut();

  /**
   * <pre>
   * </pre>
   *
   * <code>int32 IsBlocked = 9;</code>
   * @return The isBlocked.
   */
  int getIsBlocked();
}
