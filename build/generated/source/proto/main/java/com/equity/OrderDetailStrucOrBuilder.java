// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: equity.proto

package com.equity;

public interface OrderDetailStrucOrBuilder extends
    // @@protoc_insertion_point(interface_extends:equity.OrderDetailStruc)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>int32 ID = 1;</code>
   * @return The iD.
   */
  int getID();

  /**
   * <code>int32 DeviceOrderID = 2;</code>
   * @return The deviceOrderID.
   */
  int getDeviceOrderID();

  /**
   * <code>int32 OrderID = 3;</code>
   * @return The orderID.
   */
  int getOrderID();

  /**
   * <code>string ClientID = 4;</code>
   * @return The clientID.
   */
  java.lang.String getClientID();
  /**
   * <code>string ClientID = 4;</code>
   * @return The bytes for clientID.
   */
  com.google.protobuf.ByteString
      getClientIDBytes();

  /**
   * <code>string OrderTime = 5;</code>
   * @return The orderTime.
   */
  java.lang.String getOrderTime();
  /**
   * <code>string OrderTime = 5;</code>
   * @return The bytes for orderTime.
   */
  com.google.protobuf.ByteString
      getOrderTimeBytes();

  /**
   * <code>string Symbol = 6;</code>
   * @return The symbol.
   */
  java.lang.String getSymbol();
  /**
   * <code>string Symbol = 6;</code>
   * @return The bytes for symbol.
   */
  com.google.protobuf.ByteString
      getSymbolBytes();

  /**
   * <code>string Board = 7;</code>
   * @return The board.
   */
  java.lang.String getBoard();
  /**
   * <code>string Board = 7;</code>
   * @return The bytes for board.
   */
  com.google.protobuf.ByteString
      getBoardBytes();

  /**
   * <code>string Exchange = 8;</code>
   * @return The exchange.
   */
  java.lang.String getExchange();
  /**
   * <code>string Exchange = 8;</code>
   * @return The bytes for exchange.
   */
  com.google.protobuf.ByteString
      getExchangeBytes();

  /**
   * <code>int32 Qty = 9;</code>
   * @return The qty.
   */
  int getQty();

  /**
   * <code>int32 MatchQty = 10;</code>
   * @return The matchQty.
   */
  int getMatchQty();

  /**
   * <code>int32 CanceledQty = 11;</code>
   * @return The canceledQty.
   */
  int getCanceledQty();

  /**
   * <code>int32 Price = 12;</code>
   * @return The price.
   */
  int getPrice();

  /**
   * <code>string Status = 13;</code>
   * @return The status.
   */
  java.lang.String getStatus();
  /**
   * <code>string Status = 13;</code>
   * @return The bytes for status.
   */
  com.google.protobuf.ByteString
      getStatusBytes();

  /**
   * <code>string desc = 14;</code>
   * @return The desc.
   */
  java.lang.String getDesc();
  /**
   * <code>string desc = 14;</code>
   * @return The bytes for desc.
   */
  com.google.protobuf.ByteString
      getDescBytes();

  /**
   * <code>string UserID = 15;</code>
   * @return The userID.
   */
  java.lang.String getUserID();
  /**
   * <code>string UserID = 15;</code>
   * @return The bytes for userID.
   */
  com.google.protobuf.ByteString
      getUserIDBytes();

  /**
   * <pre>
   *string MarketClientOrderID = 1;
   *string OrderID = 2;
   *int32 OrderStatus = 3; // 0 : pending New., 1 : Open, 2 : Match, 3 : Amended, 4 : canceled, 5 : partial,  6 : Rejected
   *string MarketOrderID = 4; // Broker reference
   *int64 OrderQuantity = 5;
   *int64 MatchedQuantity = 6; // MatchedQuantity per trade
   *int32 OrderPrice = 7;
   *int32 MatchedPrice = 8;
   *string CreatedDatetime = 9; // default is zero time
   *string TransactionDatetime = 10; // default is zero time
   *string AcceptedDatetime = 11; // default is zero time
   *string TradeID = 12;
   *string MarketTradeID = 13;
   *string Remark = 14;
   *int32 InstructionID = 15; //  InstructionNew = 1;  InstructionRevise = 2;
   *string Source = 16; // RMS, OMS, IDX
   *int32 Side = 17;
   *int32 Instrument = 18; // 0 : Equity, 1 : Mutual Fund
   *string Symbol = 19; // Kode Saham
   *string Exchange = 20;  // IDX :
   *string Board = 21;
   *string TradingID = 22; // SID
   *int32 TimeInForce = 23;
   *string ExchangeCode = 24;
   *string ClientID = 25;
   *int64 OrderQuantityLot = 26; // OrderQuantity / configured lot size
   *int64 MatchedQuantityLot = 27; // MatchedQuantity per trade / configured lot size
   *int64 TotalMatchedQuantity = 28; // Total matched quantity (cummulative)
   *int64 TotalMatchedQuantityLot = 29; // Total matched quantity lot (cummulative)
   *bool ForcedToSell = 30;
   *string UserID = 31;
   *int64 index = 32; // setiap perubahan index berganti untuk memastikan data terkirim ke client
   * </pre>
   *
   * <code>int32 ForcedToSell = 16;</code>
   * @return The forcedToSell.
   */
  int getForcedToSell();
}
